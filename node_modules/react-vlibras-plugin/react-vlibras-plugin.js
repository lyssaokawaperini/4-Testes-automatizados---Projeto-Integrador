import { jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useRef } from 'react';
const mapPosition = {
    'left': 'L',
    'right': 'R',
    'bottom': 'B',
    'top': 'T',
    'bottom-left': 'BL',
    'top-left': 'TL',
    'bottom-right': 'BR',
    'top-right': 'TR',
};
function ReactVLibras({ position = 'right', avatar = 'guga', opacity = 1 }) {
    const scriptRef = useRef(null);
    useEffect(() => {
        init();
        return () => {
            if (scriptRef.current) {
                document.body.removeChild(scriptRef.current);
            }
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const init = () => {
        scriptRef.current = document.createElement('script');
        scriptRef.current.src = 'https://vlibras.gov.br/app/vlibras-plugin.js';
        scriptRef.current.addEventListener('load', createWidget);
        document.body.appendChild(scriptRef.current);
    };
    const createWidget = () => {
        scriptRef.current?.removeEventListener('load', createWidget);
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        new window.VLibras.Widget({
            position: mapPosition[position],
            rootPath: 'https://vlibras.gov.br/app',
            avatar: avatar,
            opacity: opacity,
        });
        observeDOMChanges();
    };
    const generateUniqueKeyframeName = (baseName) => {
        return `${baseName}-${Math.random().toString(36).substring(2, 15)}`;
    };
    const containsVpOrVw = (selectorText) => {
        return /\[vp\]|\[vw\]|\.vp|\.vw|\.vpw/.test(selectorText);
    };
    const validationStyleSheet = (node) => {
        if (node.nodeName === 'STYLE' || (node.nodeName === 'LINK' && node.rel === 'stylesheet')) {
            const styleSheet = node.sheet;
            return styleSheet !== null && styleSheet.cssRules !== null;
        }
        return false;
    };
    const updateKeyframeNameInStyles = (oldName, newName) => {
        document.querySelectorAll('style').forEach((styleTag) => {
            const containsOldName = new RegExp(`@keyframes\\s+${oldName}|\\b${oldName}\\b`, 'g').test(styleTag.textContent || '');
            if (containsVpOrVw(styleTag.textContent || '') && containsOldName) {
                const updatedContent = (styleTag.textContent || '')
                    .replace(new RegExp(`@keyframes\\s+${oldName}`, 'g'), `@keyframes ${newName}`)
                    .replace(new RegExp('(animation:\\s*[^;}]*?)(;|})', 'g'), (match) => {
                    return match.replace(new RegExp(`\\b${oldName}\\b`, 'g'), newName);
                });
                styleTag.textContent = updatedContent;
            }
        });
    };
    const observeDOMChanges = () => {
        const observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                mutation.addedNodes.forEach((node) => {
                    if (validationStyleSheet(node)) {
                        Array.from(node.sheet.cssRules).forEach((rule) => {
                            if (rule.type === CSSRule.KEYFRAMES_RULE) {
                                updateKeyframeNameInStyles(rule.name, generateUniqueKeyframeName(rule.name));
                            }
                        });
                    }
                });
            });
        });
        observer.observe(document.head, { childList: true, subtree: true });
    };
    const htmlContentVLibras = `
    <div vw class="enabled">
      <div vw-access-button class="active"></div>
      <div vw-plugin-wrapper>
        <div class="vw-plugin-top-wrapper"></div>
      </div>
    </div>
  `;
    return _jsx("div", { dangerouslySetInnerHTML: { __html: htmlContentVLibras } });
}
export default ReactVLibras;
